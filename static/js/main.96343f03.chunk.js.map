{"version":3,"sources":["reportWebVitals.ts","pages/ParkingSlot.tsx","components/Header.tsx","components/Filters/Checkbox.tsx","components/Map.tsx","pages/Frontpage.tsx","App.tsx","theme/theme.ts","Root.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ParkingSlot","useState","info","setInfo","id","useParams","useEffect","axios","get","response","data","catch","error","console","log","to","name","fi","Container","styled","header","props","theme","spacing","large","color","primary","white","Header","children","HiddenCheckbox","StyledCheckbox","checked","Checkbox","type","defaultChecked","div","StyledMap","MapContainer","Icon","Filters","FilterGroup","medium","Map","markers","useTheme","detailedPoints","setDetailedPoints","utilization","setUtilization","CUSTOM","setChecked","activeFilters","setActiveFilters","currentList","setCurrentList","currentOpeningHours","setOpeningHours","toggleChecked","e","filters","activeFilterNames","Object","keys","filter","filterName","handleUpdate","target","filterList","useCallback","length","item","some","activeFilterName","pricingMethod","includes","promises","map","point","res","Promise","all","filtered","greenIcon","L","divIcon","className","html","ReactDOMServer","renderToString","redIcon","grey","onChange","center","zoom","TileLayer","attribution","url","FeatureGroup","pathOptions","marker","details","find","openingHours","Marker","position","location","bbox","icon","openNow","eventHandlers","click","undefined","isSaturday","Date","SATURDAY","isSunday","SUNDAY","BUSINESS_DAY","getOpeningHours","byDayType","Popup","closeOnClick","from","until","builtCapacity","CAR","spacesAvailable","Rectangle","bounds","motion","Frontpage","carParkPoints","setCarParkPoints","results","App","path","small","Root","styles","css","emotionReset","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96343f03.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { useParams, Link } from 'react-router-dom'\nimport { DetailedFacility } from '../utils/interfaces'\n\n\nexport function ParkingSlot() {\n  const [info, setInfo] = useState<DetailedFacility | null>()\n  let { id } = useParams()\n  useEffect(() => {\n    axios.get<DetailedFacility>(`https://p.hsl.fi/api/v1/facilities/${id}.json`).then((response) => {\n    // handle success\n      setInfo(response.data)\n     \n    }).catch(function (error) {\n      // handle error\n      console.log(error)\n    })\n      .then(function () {\n        // always executed\n      })\n    \n    \n  },  [])\n\n  console.log(info)\n  return (<div>\n    <Link to=\"/\">Takaisin</Link>\n    <h2>{info && info.name.fi}</h2>\n  </div>)\n}","import styled from '@emotion/styled'\n\nconst Container = styled.header `\n    padding: ${props => props.theme.spacing.large}px;\n    background-color: ${props => props.theme.color.primary};\n    color: ${props => props.theme.color.white};\n`\n\ninterface Props {\n    children: React.ReactNode\n}\n\nexport function Header({children} : Props){\n  return <Container>\n    {children}\n  </Container>\n}","import styled from '@emotion/styled/macro'\nimport React, { ChangeEventHandler } from 'react'\nconst Container = styled.div `\n    position: relative;\n`\n\nconst HiddenCheckbox = styled.input`\n  border: 0;\n  clip: rect(0 0 0 0);\n  clippath: inset(50%);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n`\n\nconst StyledCheckbox = styled.div<{checked: boolean}>`\n  display: flex;\n  cursor: pointer;\n  align-items: center;\n  justify-content: center;\n  width: 40px;\n  height: 40px;\n background-color: ${props => props.checked ?  props.theme.color.primary : props.theme.color.white};\n  border-radius: 50%;\n  border: 2px solid ${props => props.theme.color.primary};\n  transition: all 150ms;\n  color: ${props => props.checked ? props.theme.color.white:  props.theme.color.primary};\n  font-size: 0.9rem;\n`\n \n\n\ninterface Props {\n    onChange: ChangeEventHandler\n    checked: boolean\n    name: string\n    children: React.ReactNode\n  }\n\nexport function Checkbox({checked,\n  children,\n  ...props\n}: Props) {\n  \n  return (\n    <Container>\n      <HiddenCheckbox\n        type=\"checkbox\"\n        defaultChecked={checked}\n        {...props}\n      />\n      <StyledCheckbox checked={checked} >{children}</StyledCheckbox>\n        \n    </Container>\n  )\n}","import { useTheme } from '@emotion/react'\nimport styled from '@emotion/styled'\nimport axios from 'axios'\nimport { isSaturday, isSunday } from 'date-fns'\nimport L from 'leaflet'\nimport  React, { useCallback, useEffect, useState } from 'react'\nimport ReactDOMServer from 'react-dom/server'\nimport { FeatureGroup,  MapContainer, Marker, Popup, Rectangle, TileLayer } from 'react-leaflet'\nimport { DetailedFacility, Facility, FilterTypes, Utilization, OpeningHours } from '../utils/interfaces'\nimport { Checkbox } from './Filters/Checkbox'\nimport { Link } from 'react-router-dom'\n\n\nconst Container = styled.div `\n  position: relative;\n  width: 100%;\n  height: 100%;\n`\n\nconst StyledMap = styled(MapContainer) `\n    width: 100%;\n    height: 100%;\n    .leaflet-div-icon {\n        background-color: transparent;\n        background: transparent;\n        border: 0;\n    }\n\n`\n\nconst Icon = styled.div<{color: string}> `\n  position: relative;\n  \n  border-radius: 50% 50% 50% 0;\n  border: 4px solid ${props => props.color};\n  width: 20px;\n  height: 20px;\n  transform: rotate(-45deg);\n  background-color: white;\n\n  &::after {\n    position: absolute;\n  content: '';\n  width: 10px;\n  height: 10px;\n  border-radius: 50%;\n  top: 50%;\n  left: 50%;\n  margin-left: -5px;\n  margin-top: -5px;\n  background-color: ${props => props.color};\n  }\n`\n\nconst Filters = styled.div `\n  display: block;\n  position: absolute;\n  top: 0;\n  right: 0;\n  background-color: rgba(255,255,255,0.7);\n  padding: ${props => props.theme.spacing.large}px;\n  z-index: 999;\n`\nconst FilterGroup = styled.div `\n  display:flex;\n  width: 100%;\n  flex-direction: column;\n  align-items: center;\n\n  & > * {\n    margin-top: ${props => props.theme.spacing.medium}px;\n  }\n`\n\ninterface Props {\n  markers: Facility[]\n}\n\ntype CheckedState = {\n  [key in FilterTypes]: boolean\n}\nexport function Map ({markers}: Props) {\n\n  const theme = useTheme()\n\n  const [detailedPoints, setDetailedPoints] = useState<DetailedFacility[] | null>(null)\n  const [utilization, setUtilization] = useState<Utilization[]>([])\n\n  const [checked, setChecked] = useState<CheckedState>({\n    '12H': false,\n    '247': false,\n    CUSTOM: false,\n  })\n  const [activeFilters, setActiveFilters] = useState<string[]>([])\n  const [currentList, setCurrentList] = useState<Facility[] | null>(markers)\n  const [currentOpeningHours, setOpeningHours] = useState<OpeningHours>()\n\n  const handleUpdate = (filters: { [key in FilterTypes]: boolean }) => {\n    const activeFilterNames = Object.keys(filters).filter(\n      filterName => filters[filterName as FilterTypes]\n    )\n\n    setActiveFilters(activeFilterNames)\n    setChecked(filters)\n  }\n\n  const toggleChecked = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = {\n      ...checked,\n      [e.target.name]: !checked[e.target.name as FilterTypes]\n    }\n\n\n    handleUpdate(newValue)\n  }\n\n  const filterList = useCallback(() => {\n    if (!markers) {\n      return null\n    }\n    if (activeFilters.length === 0) {\n      return markers\n    }\n    return markers.filter(item => activeFilters.some(activeFilterName => item.pricingMethod.includes(activeFilterName)))\n    \n   \n  }, [activeFilters, detailedPoints])\n\n  useEffect(() => {\n    const promises = markers.map(point => { return axios.get<DetailedFacility>(`https://p.hsl.fi/api/v1/facilities/${point.id}.json`).then(res => res.data)})\n    \n    promises && \n      Promise.all(promises).then(data => {\n        setDetailedPoints(data)\n      })\n    \n  },  [])\n\n  useEffect(() => {\n    const filtered = filterList()\n    setCurrentList(filtered)\n  }, [activeFilters])\n\n  const greenIcon = L.divIcon({\n    className: 'custom-icon',\n    html: ReactDOMServer.renderToString(<Icon color={theme.color.primary}/>)    \n  })\n\n  const redIcon = L.divIcon({\n    className: 'custom-icon',\n    html: ReactDOMServer.renderToString(<Icon color={theme.color.grey}/>)    \n  })\n  \n  function getUtilization(id:number){\n    axios.get<Utilization[]>(`https://p.hsl.fi/api/v1/facilities/${id}/utilization.json`).then((response) => {\n   \n      setUtilization(response.data)\n    }).catch((error) => {\n      console.log(error)\n    }).then(() => {\n\n      //execute\n    })\n  }\n\n  function getOpeningHours(details: {SUNDAY: OpeningHours, SATURDAY: OpeningHours, BUSINESS_DAY: OpeningHours}) {\n    if(isSaturday(new Date())) {\n      setOpeningHours(details.SATURDAY)\n    } else if (isSunday(new Date())) {\n      setOpeningHours(details.SUNDAY) \n    } \n    setOpeningHours(details.BUSINESS_DAY)\n  }\n\n  \n  const purpleOptions = { color: 'purple' }\n\n  return (\n    <Container>   \n      <Filters>\n        <h3>Maksuton:</h3>\n        <FilterGroup>\n          <label>\n            <Checkbox\n              name=\"12H\"\n              checked={checked['12H']}\n              onChange={toggleChecked}\n            >12h</Checkbox>\n           \n          </label>\n          <label>\n            <Checkbox\n              name=\"247\"\n              checked={checked['247']}\n              onChange={toggleChecked}\n            >24h</Checkbox>\n           \n          </label>\n        </FilterGroup>\n      </Filters> \n      <StyledMap center={[60.402778, 25.029167]} zoom={11} >\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n       \n        <FeatureGroup pathOptions={purpleOptions}>\n          {currentList && currentList.map(marker => {\n            const details = detailedPoints?.find(id => id.id === marker.id)\n            const openingHours = currentOpeningHours\n            return (\n              <div key={marker.id}>\n                <Marker \n                  position={[marker.location.bbox[1], marker.location.bbox[0]]} \n                  icon={details?.openingHours.openNow ? greenIcon : redIcon}\n                  eventHandlers={{\n                    click: () => {\n                      setUtilization([])\n                      getUtilization(marker.id)\n                      setOpeningHours(undefined)\n                      details && getOpeningHours(details.openingHours.byDayType)\n                    },\n                  }}>\n                  <Popup\n                    closeOnClick={false}>\n                    <h4>{marker.name.fi}</h4>\n                    {openingHours && <span>Avoinna tänään: {openingHours?.from} - {openingHours?.until}</span>}<br />\n                    Paikkoja yhteensä: {details?.builtCapacity.CAR}\n                    {utilization.length !== 0 && <><br /><span>Paikkoja vapaana: {utilization[0].spacesAvailable}</span> </>}\n                    <Link to={`/asema/${marker.id}`}>Katso lisätiedot</Link>\n                  </Popup>\n                </Marker>\n                <Rectangle key={marker.id} bounds={[\n                  [marker.location.bbox[1], marker.location.bbox[0]],\n                  [marker.location.bbox[3], marker.location.bbox[2]],\n                ]} />\n            \n              </div>\n            )}\n         \n          )}\n        </FeatureGroup>\n      </StyledMap>\n      \n    </Container>\n  )\n}\n","import styled from '@emotion/styled'\nimport axios from 'axios'\nimport { motion } from 'framer-motion'\nimport   { useEffect, useState } from 'react'\nimport { Header } from '../components/Header'\nimport { Map } from '../components/Map'\nimport { Facility } from '../utils/interfaces'\nimport Image from './roadImage.jpg'\n\nconst MapContainer = styled.div `\n  width: 100%;\n  height: 90vh;\n`\nconst TwoColumns = styled(motion.div) `\n    width: 80%;\n    margin: ${props => props.theme.spacing.large}px auto;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: ${props => props.theme.spacing.large}px;\n    overflow: hidden;\n\n    div {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        img {\n            max-width: 100%;\n        }\n    }\n\n   \n`\n\n//animations\n\nconst container = {\n  hidden: { opacity: 0 },\n  show: {\n    opacity: 1,\n    transition: {\n      delayChildren: 0.5,\n      staggerChildren: 0.5\n    }\n  }\n}\n\nconst item = {\n  hidden: { y: '100%' },\n  show: { y: 0 }\n}\ninterface ApiResults {\n    hasMore: boolean;\n    results: Facility[]\n}\nexport function Frontpage(){\n  const [carParkPoints, setCarParkPoints] = useState<Facility[] | null>(null)\n \n\n  useEffect(() => {\n    axios.get<ApiResults>('https://p.hsl.fi/api/v1/facilities.json').then((response) => {\n      // handle success\n      setCarParkPoints(response.data.results.filter(item => item.type === 'CAR'))\n       \n    }).catch(function (error) {\n      // handle error\n      console.log(error)\n    })\n      .then(function () {\n        // always executed\n      })\n      \n      \n  },  [])\n  return (\n    <>\n      <Header>\n        <h2>Liityntäpysäköintiparkkipaikat</h2>\n      </Header>\n      {/* <TwoColumns\n        variants={container}\n        initial=\"hidden\"\n        animate=\"show\">\n        <motion.div\n          variants={item}>\n          <img src={Image} alt=\"illustration of road\"/>\n        </motion.div>\n        \n        <motion.div\n          variants={item}>\n          <h3>Alla olevasta kartasta voit katsoa mihin pysäköit helpoiten autosi, kun vaihdat julkisen liikenteen kulkuvälineeseen</h3>\n        </motion.div>\n     </TwoColumns>*/}\n      {carParkPoints &&\n          <MapContainer>\n            <Map markers={carParkPoints} /> \n          </MapContainer>\n      }\n    </>\n  )\n}","import {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom'\nimport { ParkingSlot } from './pages/ParkingSlot'\nimport { Frontpage } from './pages/Frontpage'\n\n\nexport function App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/asema/:id\">\n          <ParkingSlot />\n        </Route>\n        <Route path=\"/\">\n          <Frontpage />\n        </Route>\n      </Switch>\n    </Router>\n    \n  )\n}\n\nexport default App\n","export const theme = {\n  color: {\n    primary: '#1b8185',\n    grey: '#9e9e9e',\n    white: '#ffffff'\n  },\n  spacing: {\n    small: 4,\n    medium: 8,\n    large: 16\n  }\n}","\nimport { css, Global,ThemeProvider } from '@emotion/react'\nimport emotionReset from 'emotion-reset'\n\n\nimport { App } from './App'\nimport { theme } from './theme/theme'\n\n\nexport function Root() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Global\n        styles={css`\n         ${emotionReset}\n\n        body {\n          font-family: 'Nunito', sans-serif;\n          h1,h2,h3 {  \n            font-family: 'Raleway', sans-serif;\n          }\n          p {\n            font-family: 'Nunito', sans-serif;\n          }\n        }\n      `}\n      />\n\n      <App />\n  \n    </ThemeProvider>\n\n  )\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport reportWebVitals from './reportWebVitals'\nimport { Root } from './Root'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}